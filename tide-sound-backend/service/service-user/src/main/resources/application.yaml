#  未来配置文件有两个维度  6种写法    （用springboot不是一定要用springcloud   用springcloud基本都会用springboot）
# 1.application.xxx---springboot默认提供的（只要是springboot应用）
# 2.bootstrap.xxx---springcloud提供的（只要引入cloud的某些组件）
#bootstrap的优先级会高于application优先级  bootstrap.properties application.properties
# xxx有三种形式：properties(优先级最高)  yaml   yml


#  application中主要配置应用需要的各个组件的信息（MySQL  Redis   MQ...）

server:
  port: 8510   # user微服务的端口


spring:
  # 表示开发环境接入 application-local.yaml 的配置
  profiles:
    active: prod
  # mysql
  datasource:
    type: com.zaxxer.hikari.HikariDataSource   # 数据源连接池（最快）
    driver-class-name: com.mysql.jdbc.Driver   # 指定数据库的驱动
    url: jdbc:mysql://192.168.76.15:3306/tingshu_user
    username: root
    password: root
  # redis
  data:
    redis:
      host: 192.168.76.15
      port: 6379
      password: root
      database: 0
  # RabbitMQ
  rabbitmq:
    host: 192.168.76.15
    port: 5672
    username: guest
    password: guest
    publisher-confirm-type: CORRELATED  # 发布确认模式
    publisher-returns: true  # 确保消息返回
    listener:
      simple:
        acknowledge-mode: manual #默认情况下消息消费者是自动确认消息的，如果要手动确认消息则需要修改确认模式为manual
        prefetch: 1 # 在prefetch=1的情况下，消费者在确认当前消息之前不会收到新的消息  在多个消费者下也不会将多个未确认的消息同时发送给同一个消费者。

  main:
    allow-bean-definition-overriding: true   # 这种写法会有风险,解决注册中心,服务名重复冲突的问题,覆盖



#wx:(自定义的配置顶头写)
#  login:
#    appId: xxx
#    appSecret: xxxx





